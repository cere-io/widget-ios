{"Typealiases.html#/s:16CerebellumWidget13OnHideHandlera":{"name":"OnHideHandler","abstract":"<p>Type for onHide event handler.</p>"},"Typealiases.html#/s:16CerebellumWidget15OnSignUpHandlera":{"name":"OnSignUpHandler","abstract":"<p>Type for onSignUp event handler.</p>"},"Typealiases.html#/s:16CerebellumWidget15OnSignInHandlera":{"name":"OnSignInHandler","abstract":"<p>Type for onSignIn event handler.</p>"},"Typealiases.html#/s:16CerebellumWidget26OnGetClaimedRewardsHandlera":{"name":"OnGetClaimedRewardsHandler","abstract":"<p>Type for onGetClaimedRewards event handler.</p>"},"Typealiases.html#/s:16CerebellumWidget25GetClaimedRewardsCallbacka":{"name":"GetClaimedRewardsCallback","abstract":"<p>Type for GetClaimedRewardsCallback parameter that is used for onGetClaimedRewards event handler.</p>"},"Typealiases.html#/s:16CerebellumWidget23OnGetUserByEmailHandlera":{"name":"OnGetUserByEmailHandler","abstract":"<p>Type for OnGetUserByEmail event handler.</p>"},"Typealiases.html#/s:16CerebellumWidget22GetUserByEmailCallbacka":{"name":"GetUserByEmailCallback","abstract":"<p>Type for GetUserByEmailCallback parameter that is used for onGetUserByEmail event handler.</p>"},"Typealiases.html#/s:16CerebellumWidget31OnInitializationFinishedHandlera":{"name":"OnInitializationFinishedHandler","abstract":"<p>Type for onInitializationFinished event handler.</p>"},"Structs/Environment.html#/s:16CerebellumWidget11EnvironmentV5LOCALACvpZ":{"name":"LOCAL","abstract":"<p>Configuration property for Local environment.</p>","parent_name":"Environment"},"Structs/Environment.html#/s:16CerebellumWidget11EnvironmentV5STAGEACvpZ":{"name":"STAGE","abstract":"<p>Configuration property for Stage environment.</p>","parent_name":"Environment"},"Structs/Environment.html#/s:16CerebellumWidget11EnvironmentV10PRODUCTIONACvpZ":{"name":"PRODUCTION","abstract":"<p>Configuration property for Production environment.</p>","parent_name":"Environment"},"Structs/Environment.html#/s:16CerebellumWidget11EnvironmentV4nameSSvp":{"name":"name","abstract":"<p>Name of environment.</p>","parent_name":"Environment"},"Structs/Environment.html#/s:16CerebellumWidget11EnvironmentV9widgetURLSSvp":{"name":"widgetURL","abstract":"<p>Url to widget-ui server.</p>","parent_name":"Environment"},"Structs/Environment.html":{"name":"Environment","abstract":"<p>Struct to set the widget running environment. It contains settings to work in specified environments."},"Protocols/CerebellumWidgetProtocol.html#/s:16CerebellumWidget0aB8ProtocolP4show9placementySS_tF":{"name":"show(placement:)","abstract":"<p>This method should show the widget for specified placement.</p>","parent_name":"CerebellumWidgetProtocol"},"Protocols/CerebellumWidgetProtocol.html#/s:16CerebellumWidget0aB8ProtocolP8hasItems12forPlacementSbSS_tF":{"name":"hasItems(forPlacement:)","abstract":"<p>This method should check whether widget has items in specified placement.</p>","parent_name":"CerebellumWidgetProtocol"},"Protocols/CerebellumWidgetProtocol.html#/s:16CerebellumWidget0aB8ProtocolP13getPlacementsSaySSGyF":{"name":"getPlacements()","abstract":"<p>This method should return array of placements that are available for current RMS configuration.</p>","parent_name":"CerebellumWidgetProtocol"},"Protocols/CerebellumWidgetProtocol.html#/s:16CerebellumWidget0aB8ProtocolP4hideyyF":{"name":"hide()","abstract":"<p>This method should hide the widget.</p>","parent_name":"CerebellumWidgetProtocol"},"Protocols/CerebellumWidgetProtocol.html#/s:16CerebellumWidget0aB8ProtocolP8setEmail5emailySS_tF":{"name":"setEmail(email:)","abstract":"<p>The method to sets user email.</p>","parent_name":"CerebellumWidgetProtocol"},"Protocols/CerebellumWidgetProtocol.html#/s:16CerebellumWidget0aB8ProtocolP14showOnboardingyyF":{"name":"showOnboarding()","abstract":"<p>The method sets widget to sign up mode and shows it.</p>","parent_name":"CerebellumWidgetProtocol"},"Protocols/CerebellumWidgetProtocol.html#/s:16CerebellumWidget0aB8ProtocolP11setUserData4dataySS_tF":{"name":"setUserData(data:)","abstract":"<p>The method to set additional data related to current widget user.</p>","parent_name":"CerebellumWidgetProtocol"},"Protocols/CerebellumWidgetProtocol.html#/s:16CerebellumWidget0aB8ProtocolP6resize4left3top5width6heighty12CoreGraphics7CGFloatV_A3KtF":{"name":"resize(left:top:width:height:)","abstract":"<p>Sets custom size for the widget. Parameters should be specified in percentage of screen bounds.</p>","parent_name":"CerebellumWidgetProtocol"},"Protocols/CerebellumWidgetProtocol.html#/s:16CerebellumWidget0aB8ProtocolP6redrawyyF":{"name":"redraw()","abstract":"<p>Refreshes screen bounds and redraws the widget. This method should be called inside handler of parent view.","parent_name":"CerebellumWidgetProtocol"},"Protocols/CerebellumWidgetProtocol.html#/s:16CerebellumWidget0aB8ProtocolP6logoutyyF":{"name":"logout()","abstract":"<p>This method should log out the widget&rsquo;s user.</p>","parent_name":"CerebellumWidgetProtocol"},"Protocols/CerebellumWidgetProtocol.html#/s:16CerebellumWidget0aB8ProtocolP24onInitializationFinishedyA2ACyycF":{"name":"onInitializationFinished(_:)","abstract":"<p>The metod to set handler for <code>onInitializationFinished</code> event.</p>","parent_name":"CerebellumWidgetProtocol"},"Protocols/CerebellumWidgetProtocol.html#/s:16CerebellumWidget0aB8ProtocolP6onHideyA2ACyycF":{"name":"onHide(_:)","abstract":"<p>The metod to set handler for <code>onHide</code> event.</p>","parent_name":"CerebellumWidgetProtocol"},"Protocols/CerebellumWidgetProtocol.html#/s:16CerebellumWidget0aB8ProtocolP8onSignUpyA2ACySS_S2SSDyS2SGtcF":{"name":"onSignUp(_:)","abstract":"<p>The metod to set handler for <code>onSignUp</code> event.</p>","parent_name":"CerebellumWidgetProtocol"},"Protocols/CerebellumWidgetProtocol.html#/s:16CerebellumWidget0aB8ProtocolP8onSignInyA2ACySS_SSSDyS2SGtcF":{"name":"onSignIn(_:)","abstract":"<p>The metod to set handler for <code>onSignIn</code> event.</p>","parent_name":"CerebellumWidgetProtocol"},"Protocols/CerebellumWidgetProtocol.html#/s:16CerebellumWidget0aB8ProtocolP19onGetClaimedRewardsyA2ACyySayAA0F10RewardItemCGccF":{"name":"onGetClaimedRewards(_:)","abstract":"<p>The metod to set handler for <code>onGetClaimedRewards</code> event.</p>","parent_name":"CerebellumWidgetProtocol"},"Protocols/CerebellumWidgetProtocol.html#/s:16CerebellumWidget0aB8ProtocolP16onGetUserByEmailyA2ACySS_ySbctcF":{"name":"onGetUserByEmail(_:)","abstract":"<p>The metod to set handler for <code>onGetUserByEmail</code> event.</p>","parent_name":"CerebellumWidgetProtocol"},"Protocols/CerebellumWidgetProtocol.html":{"name":"CerebellumWidgetProtocol","abstract":"<p>Protocol that contains all API methods of CerebellumWidget.</p>"},"Enums/WidgetMode.html#/s:16CerebellumWidget0B4ModeO5LOGINyA2CmF":{"name":"LOGIN","abstract":"<p>This mode is used to provide login functionality for the application.</p>","parent_name":"WidgetMode"},"Enums/WidgetMode.html#/s:16CerebellumWidget0B4ModeO7REWARDSyA2CmF":{"name":"REWARDS","abstract":"<p>Default mode. It is used to show rewards and sharing capability of the widget.</p>","parent_name":"WidgetMode"},"Enums/WidgetMode.html":{"name":"WidgetMode","abstract":"<p>Enum for setting widget mode.</p>"},"Classes/ClaimedRewardItem.html#/s:16CerebellumWidget17ClaimedRewardItemC5titleSSvp":{"name":"title","abstract":"<p>Title of the reward.</p>","parent_name":"ClaimedRewardItem"},"Classes/ClaimedRewardItem.html#/s:16CerebellumWidget17ClaimedRewardItemC8imageUrlSSvp":{"name":"imageUrl","abstract":"<p>Url to logo image.</p>","parent_name":"ClaimedRewardItem"},"Classes/ClaimedRewardItem.html#/s:16CerebellumWidget17ClaimedRewardItemC5priceSo9NSDecimalavp":{"name":"price","abstract":"<p>Reward price.</p>","parent_name":"ClaimedRewardItem"},"Classes/ClaimedRewardItem.html#/s:16CerebellumWidget17ClaimedRewardItemC8currencySSvp":{"name":"currency","abstract":"<p>Currency of the price value.</p>","parent_name":"ClaimedRewardItem"},"Classes/ClaimedRewardItem.html#/s:16CerebellumWidget17ClaimedRewardItemC22redemptionInstructionsSSvp":{"name":"redemptionInstructions","abstract":"<p>String instructions on how to redeem the reward.</p>","parent_name":"ClaimedRewardItem"},"Classes/ClaimedRewardItem.html#/s:16CerebellumWidget17ClaimedRewardItemC14additionalInfoSaySSGvp":{"name":"additionalInfo","abstract":"<p>Array of additional information (ref. code, serial number, etc.) that is related to this reward.</p>","parent_name":"ClaimedRewardItem"},"Classes/ClaimedRewardItem.html#/s:16CerebellumWidget17ClaimedRewardItemC5title8imageUrl5price8currency22redemptionInstructions14additionalInfoACSS_SSSo9NSDecimalaS2SSaySSGtcfc":{"name":"init(title:imageUrl:price:currency:redemptionInstructions:additionalInfo:)","abstract":"<p>Default constructor.</p>","parent_name":"ClaimedRewardItem"},"Classes/CerebellumWidget.html#/s:16CerebellumWidgetAAC12defaultFrameSo6CGRectVSgvp":{"name":"defaultFrame","abstract":"<p>Stores initial size of the widget. Default value is whole screen size, but frame with width * frameGapFactor and height * frameGapFactor.</p>","parent_name":"CerebellumWidget"},"Classes/CerebellumWidget.html#/s:16CerebellumWidgetAAC16parentController13applicationId3envABSo06UIViewD0C_SSAA11EnvironmentVtcfc":{"name":"init(parentController:applicationId:env:)","abstract":"<p>Initializes and prepares the widget for usage.</p>","parent_name":"CerebellumWidget"},"Classes/CerebellumWidget.html#/s:16CerebellumWidgetAAC4show9placementySS_tF":{"name":"show(placement:)","abstract":"<p>Shows the widget if it is hidden.</p>","parent_name":"CerebellumWidget"},"Classes/CerebellumWidget.html#/s:16CerebellumWidgetAAC8hasItems12forPlacementSbSS_tF":{"name":"hasItems(forPlacement:)","abstract":"<p>Checks whether widget has items in specified placement. If nothing is specified then it checks if there are items in any placement.</p>","parent_name":"CerebellumWidget"},"Classes/CerebellumWidget.html#/s:16CerebellumWidgetAAC13getPlacementsSaySSGyF":{"name":"getPlacements()","abstract":"<p>Returns array of placements that are available for current RMS configuration</p>","parent_name":"CerebellumWidget"},"Classes/CerebellumWidget.html#/s:16CerebellumWidgetAAC4hideyyF":{"name":"hide()","abstract":"<p>Hides the widget.</p>","parent_name":"CerebellumWidget"},"Classes/CerebellumWidget.html#/s:16CerebellumWidgetAAC8setEmail5emailySS_tF":{"name":"setEmail(email:)","abstract":"<p>Sets user email.</p>","parent_name":"CerebellumWidget"},"Classes/CerebellumWidget.html#/s:16CerebellumWidgetAAC14showOnboardingyyF":{"name":"showOnboarding()","abstract":"<p>Sets widget to sign-up mode and shows it.</p>","parent_name":"CerebellumWidget"},"Classes/CerebellumWidget.html#/s:16CerebellumWidgetAAC11setUserData4dataySS_tF":{"name":"setUserData(data:)","abstract":"<p>Sets additional information to be shown in widget in JSON format. Only <code>level</code> and <code>name</code> are supported now.","parent_name":"CerebellumWidget"},"Classes/CerebellumWidget.html#/s:16CerebellumWidgetAAC6resize4left3top5width6heighty12CoreGraphics7CGFloatV_A3JtF":{"name":"resize(left:top:width:height:)","abstract":"<p>Sets custom size for the widget. Parameters should be specified in percentage of screen bounds.</p>","parent_name":"CerebellumWidget"},"Classes/CerebellumWidget.html#/s:16CerebellumWidgetAAC6redrawyyF":{"name":"redraw()","abstract":"<p>Refreshes screen bounds and redraws the widget. This method should be called inside handler of parent view.","parent_name":"CerebellumWidget"},"Classes/CerebellumWidget.html#/s:16CerebellumWidgetAAC6logoutyyF":{"name":"logout()","abstract":"<p>Logs out of the widget.</p>","parent_name":"CerebellumWidget"},"Classes/CerebellumWidget.html#/s:16CerebellumWidgetAAC24onInitializationFinishedyAByycF":{"name":"onInitializationFinished(_:)","abstract":"<p>Sets handler that is called when widget is finished initialization.</p>","parent_name":"CerebellumWidget"},"Classes/CerebellumWidget.html#/s:16CerebellumWidgetAAC6onHideyAByycF":{"name":"onHide(_:)","abstract":"<p>Sets handler that is called on widget closed.</p>","parent_name":"CerebellumWidget"},"Classes/CerebellumWidget.html#/s:16CerebellumWidgetAAC8onSignUpyABySS_S2SSDyS2SGtcF":{"name":"onSignUp(_:)","abstract":"<p>Sets handler to be called when user finished sign up flow.</p>","parent_name":"CerebellumWidget"},"Classes/CerebellumWidget.html#/s:16CerebellumWidgetAAC8onSignInyABySS_SSSDyS2SGtcF":{"name":"onSignIn(_:)","abstract":"<p>Sets handler to be called when user successfully signed in to the widget.</p>","parent_name":"CerebellumWidget"},"Classes/CerebellumWidget.html#/s:16CerebellumWidgetAAC19onGetClaimedRewardsyAByySayAA0E10RewardItemCGccF":{"name":"onGetClaimedRewards(_:)","abstract":"<p>Sets handler to be called when user opens Inventory tab. List of redeemed rewards should be passed to the widget.</p>","parent_name":"CerebellumWidget"},"Classes/CerebellumWidget.html#/s:16CerebellumWidgetAAC16onGetUserByEmailyABySS_ySbctcF":{"name":"onGetUserByEmail(_:)","abstract":"<p>Sets handler to be called when user provides email in the widget to ask hosting app if the user is registered in the app.</p>","parent_name":"CerebellumWidget"},"Classes/CerebellumWidget.html":{"name":"CerebellumWidget","abstract":"<p>Class that implements CerebellumWidgetProtocol and provides all the functionality of the widget.</p>"},"Classes/ClaimedRewardItem.html":{"name":"ClaimedRewardItem","abstract":"<p>Class to define reward item. Instances of this class are used for OnGetClaimedRewards event handler.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}